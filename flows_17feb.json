[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "33c31d07.dc6f72",
        "type": "tab",
        "label": "multi in / out mqtt",
        "disabled": false,
        "info": "# A multiple input / output mqtt example \n\nClick either button to publish a string message through mqtt.\n\nThe topic on the mqtt output node is left blank. \nIt will pass along the topics that are set in the inject nodes.\n\nThis example shows using individual mqtt input nodes to each listen and process only one type of message."
    },
    {
        "id": "ac81f05c.7aa6b",
        "type": "tab",
        "label": "NINA:Influx2.0-Tutorial ",
        "disabled": false,
        "info": "Prescient Devices, Inc.\n\nhttps://prescientdevices.com/"
    },
    {
        "id": "275cd33942449615",
        "type": "tab",
        "label": "Influx2.0-Tutorial ",
        "disabled": false,
        "info": "Prescient Devices, Inc.\n\nhttps://prescientdevices.com/"
    },
    {
        "id": "d0a9e3ee4701cec0",
        "type": "tab",
        "label": "Influxdatabase",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "563356896b95740c",
        "type": "tab",
        "label": "Python-MQTT-InfluxDB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "407a01e4.6b637",
        "type": "mqtt-broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e96ac8f9add6207d",
        "type": "mqtt-broker",
        "name": "MQTTdocker",
        "broker": "172.17.0.4",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f5279b01.b328d8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "eeb221fb.ab27f",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "bucket1",
        "usetls": true,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "http://172.17.0.2:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "1f429a18.4fe486",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "testdb",
        "name": "Remote InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "https://yourpath.influxdata.com",
        "rejectUnauthorized": true
    },
    {
        "id": "97a45b603eeb47a0",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "Test influx",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "http://172.17.0.2:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "141566b4d16c205e",
        "type": "ui_group",
        "name": "Influx",
        "tab": "02482f660eaf5212",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "02482f660eaf5212",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4853da660ad9ddc4",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "f3138cf7e7214210",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "test",
        "usetls": true,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "98d658d6d96b6787",
        "type": "mqtt-broker",
        "name": "",
        "broker": "10.10.10.60",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3cc11d24.ff01a2",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "2c6873d2.992abc",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "sensors/livingroom/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e96ac8f9add6207d",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "d9beed59.94155",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "22",
        "payloadType": "num",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "2c6873d2.992abc"
            ]
        ]
    },
    {
        "id": "be80048.8f232f8",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "sensors/livingroom/temp",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e96ac8f9add6207d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "8640b8ff.f82ff8"
            ]
        ]
    },
    {
        "id": "8640b8ff.f82ff8",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "aa0c8f74.586ba",
        "type": "mqtt in",
        "z": "33c31d07.dc6f72",
        "name": "alpha",
        "topic": "example3/button/alpha",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "e96ac8f9add6207d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 70,
        "y": 220,
        "wires": [
            [
                "c0b24976.f78478"
            ]
        ]
    },
    {
        "id": "82d01c16.a2137",
        "type": "debug",
        "z": "33c31d07.dc6f72",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 390,
        "y": 240,
        "wires": []
    },
    {
        "id": "fa2824f.ec683d8",
        "type": "mqtt out",
        "z": "33c31d07.dc6f72",
        "name": "mqtt output",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e96ac8f9add6207d",
        "x": 330,
        "y": 120,
        "wires": []
    },
    {
        "id": "c669c496.6fcf18",
        "type": "inject",
        "z": "33c31d07.dc6f72",
        "name": "button alpha",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "example3/button/alpha",
        "payload": "alpha",
        "payloadType": "str",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "fa2824f.ec683d8"
            ]
        ]
    },
    {
        "id": "95c3c0b8.7c01a",
        "type": "inject",
        "z": "33c31d07.dc6f72",
        "name": "button beta",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "example3/button/beta",
        "payload": "beta",
        "payloadType": "str",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "fa2824f.ec683d8"
            ]
        ]
    },
    {
        "id": "c0b24976.f78478",
        "type": "function",
        "z": "33c31d07.dc6f72",
        "name": "hello alpha",
        "func": "msg.payload = \"Hello Alpha\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "82d01c16.a2137"
            ]
        ]
    },
    {
        "id": "17a118e9.143927",
        "type": "function",
        "z": "33c31d07.dc6f72",
        "name": "hello beta",
        "func": "msg.payload = \"Hello Beta\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "82d01c16.a2137"
            ]
        ]
    },
    {
        "id": "51c402ad.a7107c",
        "type": "mqtt in",
        "z": "33c31d07.dc6f72",
        "name": "beta",
        "topic": "example3/button/beta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "e96ac8f9add6207d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 70,
        "y": 280,
        "wires": [
            [
                "17a118e9.143927"
            ]
        ]
    },
    {
        "id": "39aa2ca9.804da4",
        "type": "debug",
        "z": "33c31d07.dc6f72",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 480,
        "wires": []
    },
    {
        "id": "803d82f.ff80f8",
        "type": "inject",
        "z": "33c31d07.dc6f72",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 480,
        "wires": [
            [
                "262a3923.e7b216"
            ]
        ]
    },
    {
        "id": "262a3923.e7b216",
        "type": "influxdb in",
        "z": "33c31d07.dc6f72",
        "influxdb": "eeb221fb.ab27f",
        "name": "",
        "query": "SELECT * from test",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "VU",
        "x": 350,
        "y": 480,
        "wires": [
            [
                "39aa2ca9.804da4"
            ]
        ]
    },
    {
        "id": "a71e55d0dadf28cf",
        "type": "influxdb out",
        "z": "33c31d07.dc6f72",
        "influxdb": "eeb221fb.ab27f",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "bucket1",
        "x": 380,
        "y": 560,
        "wires": []
    },
    {
        "id": "82abe086d9e0b541",
        "type": "inject",
        "z": "33c31d07.dc6f72",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 560,
        "wires": [
            [
                "a71e55d0dadf28cf"
            ]
        ]
    },
    {
        "id": "70993bd39c7c6911",
        "type": "debug",
        "z": "33c31d07.dc6f72",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 560,
        "wires": []
    },
    {
        "id": "634d2124.66287",
        "type": "inject",
        "z": "ac81f05c.7aa6b",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 260,
        "y": 120,
        "wires": [
            [
                "4f3edb59.523504"
            ]
        ]
    },
    {
        "id": "8023321a.6f794",
        "type": "influxdb out",
        "z": "ac81f05c.7aa6b",
        "influxdb": "97a45b603eeb47a0",
        "name": "Test Influx",
        "measurement": "Pilot",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "youtube-tutorial",
        "x": 680,
        "y": 120,
        "wires": []
    },
    {
        "id": "4f3edb59.523504",
        "type": "change",
        "z": "ac81f05c.7aa6b",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.temperature",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 120,
        "wires": [
            [
                "8023321a.6f794"
            ]
        ]
    },
    {
        "id": "7b6b9569.70cbcc",
        "type": "comment",
        "z": "ac81f05c.7aa6b",
        "name": "Write Operation",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "c7fb05e7.94a8b8",
        "type": "comment",
        "z": "ac81f05c.7aa6b",
        "name": "Read Operation",
        "info": "",
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "7731d997.cafce8",
        "type": "inject",
        "z": "ac81f05c.7aa6b",
        "name": "Fetch",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "7eec3b9c.ce92e4"
            ]
        ]
    },
    {
        "id": "7eec3b9c.ce92e4",
        "type": "function",
        "z": "ac81f05c.7aa6b",
        "name": "Query",
        "func": "msg.query=`from(bucket: \"youtube-tutorial\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Pilot\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 360,
        "wires": [
            [
                "ff05b7ed.b19c68"
            ]
        ]
    },
    {
        "id": "ff05b7ed.b19c68",
        "type": "influxdb in",
        "z": "ac81f05c.7aa6b",
        "influxdb": "97a45b603eeb47a0",
        "name": "Read",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "VU",
        "x": 670,
        "y": 360,
        "wires": [
            [
                "b8973a73.455658"
            ]
        ]
    },
    {
        "id": "b8973a73.455658",
        "type": "debug",
        "z": "ac81f05c.7aa6b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "34bd70e7.2affc",
        "type": "comment",
        "z": "ac81f05c.7aa6b",
        "name": "Dashboard",
        "info": "Dashboard",
        "x": 140,
        "y": 520,
        "wires": []
    },
    {
        "id": "7e40a9e5.570a28",
        "type": "inject",
        "z": "ac81f05c.7aa6b",
        "name": "Fetch",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "62c04a51.18ac14"
            ]
        ]
    },
    {
        "id": "62c04a51.18ac14",
        "type": "function",
        "z": "ac81f05c.7aa6b",
        "name": "Query",
        "func": "msg.query=`from(bucket: \"youtube-tutorial\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Pilot\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 580,
        "wires": [
            [
                "6f4b8ce8.277684"
            ]
        ]
    },
    {
        "id": "6f4b8ce8.277684",
        "type": "influxdb in",
        "z": "ac81f05c.7aa6b",
        "influxdb": "97a45b603eeb47a0",
        "name": "Read",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "VU",
        "x": 670,
        "y": 580,
        "wires": [
            [
                "50c2fcbb.41b6a4"
            ]
        ]
    },
    {
        "id": "50c2fcbb.41b6a4",
        "type": "function",
        "z": "ac81f05c.7aa6b",
        "name": "",
        "func": "let temp=[]\nmsg.payload.forEach(function (data,index) {\nlet value={temperature:data[\"_value\"],time:data[\"timestamp\"]}\ntemp.push(value)\n});\nnode.warn(temp)\nmsg.payload=temp\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 580,
        "wires": [
            [
                "744556fef6a71301"
            ]
        ]
    },
    {
        "id": "744556fef6a71301",
        "type": "ui_table",
        "z": "ac81f05c.7aa6b",
        "group": "1d3079f6.1926d6",
        "name": "Influx",
        "order": 0,
        "width": "12",
        "height": "6",
        "columns": [
            {
                "field": "temperature",
                "title": "Temperature",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1170,
        "y": 580,
        "wires": []
    },
    {
        "id": "0f60670b0d547897",
        "type": "inject",
        "z": "275cd33942449615",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 260,
        "y": 120,
        "wires": [
            [
                "759e35759e14e28a"
            ]
        ]
    },
    {
        "id": "0c6e56bf0974369a",
        "type": "influxdb out",
        "z": "275cd33942449615",
        "influxdb": "",
        "name": "Test Influx",
        "measurement": "Pilot",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "ashish.yadav@prescientdevices.com",
        "bucket": "youtube-tutorial",
        "x": 680,
        "y": 120,
        "wires": []
    },
    {
        "id": "759e35759e14e28a",
        "type": "change",
        "z": "275cd33942449615",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.temperature",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 120,
        "wires": [
            [
                "0c6e56bf0974369a"
            ]
        ]
    },
    {
        "id": "f72ce78959170729",
        "type": "comment",
        "z": "275cd33942449615",
        "name": "Write Operation",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "8f46bcd5eef44d20",
        "type": "comment",
        "z": "275cd33942449615",
        "name": "Read Operation",
        "info": "",
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "04a1ab027c026bf0",
        "type": "inject",
        "z": "275cd33942449615",
        "name": "Fetch",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "625fe48d2b33888a"
            ]
        ]
    },
    {
        "id": "625fe48d2b33888a",
        "type": "function",
        "z": "275cd33942449615",
        "name": "Query",
        "func": "msg.query=`from(bucket: \"youtube-tutorial\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Pilot\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 360,
        "wires": [
            [
                "e3f5338104849daf"
            ]
        ]
    },
    {
        "id": "e3f5338104849daf",
        "type": "influxdb in",
        "z": "275cd33942449615",
        "influxdb": "",
        "name": "Read",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "ashish.yadav@prescientdevices.com",
        "x": 670,
        "y": 360,
        "wires": [
            [
                "6d93bcb5b0d6ec02"
            ]
        ]
    },
    {
        "id": "6d93bcb5b0d6ec02",
        "type": "debug",
        "z": "275cd33942449615",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "2e19d74e5bd54e52",
        "type": "comment",
        "z": "275cd33942449615",
        "name": "Dashboard",
        "info": "Dashboard",
        "x": 140,
        "y": 520,
        "wires": []
    },
    {
        "id": "bedd4a3243df7d20",
        "type": "inject",
        "z": "275cd33942449615",
        "name": "Fetch",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "73ec7a455f62b3c6"
            ]
        ]
    },
    {
        "id": "73ec7a455f62b3c6",
        "type": "function",
        "z": "275cd33942449615",
        "name": "Query",
        "func": "msg.query=`from(bucket: \"youtube-tutorial\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Pilot\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 580,
        "wires": [
            [
                "7cb6b54bc5118084"
            ]
        ]
    },
    {
        "id": "7cb6b54bc5118084",
        "type": "influxdb in",
        "z": "275cd33942449615",
        "influxdb": "",
        "name": "Read",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "ashish.yadav@prescientdevices.com",
        "x": 670,
        "y": 580,
        "wires": [
            [
                "592f170642a78f9b"
            ]
        ]
    },
    {
        "id": "592f170642a78f9b",
        "type": "function",
        "z": "275cd33942449615",
        "name": "",
        "func": "let temp=[]\nmsg.payload.forEach(function (data,index) {\nlet value={temperature:data[\"_value\"],time:data[\"timestamp\"]}\ntemp.push(value)\n});\nnode.warn(temp)\nmsg.payload=temp\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 580,
        "wires": [
            [
                "52e0c93bddcec761"
            ]
        ]
    },
    {
        "id": "52e0c93bddcec761",
        "type": "ui_table",
        "z": "275cd33942449615",
        "group": "1d3079f6.1926d6",
        "name": "Influx",
        "order": 0,
        "width": "12",
        "height": "6",
        "columns": [
            {
                "field": "temperature",
                "title": "Temperature",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1190,
        "y": 580,
        "wires": []
    },
    {
        "id": "63b3b0d2e950886d",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "household",
        "measurement": "Household",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "af5dd6ff1170299c",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Write Operation HOUSEHOLD",
        "info": "",
        "x": 180,
        "y": 80,
        "wires": []
    },
    {
        "id": "0f64ba1abe174d20",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Read Operation",
        "info": "",
        "x": 140,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5b4e7f7fbb5f8d6e",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "Fetch",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 1140,
        "wires": [
            [
                "a5e6df6366b70ead"
            ]
        ]
    },
    {
        "id": "a5e6df6366b70ead",
        "type": "function",
        "z": "d0a9e3ee4701cec0",
        "name": "Query",
        "func": "msg.query=`from(bucket: \"youtube-tutorial\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Pilot\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "7bf5ebd6cefada3d"
            ]
        ]
    },
    {
        "id": "7bf5ebd6cefada3d",
        "type": "influxdb in",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "Read",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "VU",
        "x": 650,
        "y": 1140,
        "wires": [
            [
                "3a67e21a7b868d5e"
            ]
        ]
    },
    {
        "id": "3a67e21a7b868d5e",
        "type": "debug",
        "z": "d0a9e3ee4701cec0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1140,
        "wires": []
    },
    {
        "id": "71437e494a2d4eb7",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Dashboard",
        "info": "Dashboard",
        "x": 120,
        "y": 1300,
        "wires": []
    },
    {
        "id": "2b764d5cd2eefd34",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "Fetch",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 1360,
        "wires": [
            [
                "4ec0681ee515fdbc"
            ]
        ]
    },
    {
        "id": "4ec0681ee515fdbc",
        "type": "function",
        "z": "d0a9e3ee4701cec0",
        "name": "Query",
        "func": "msg.query=`from(bucket: \"youtube-tutorial\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Pilot\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 1360,
        "wires": [
            [
                "37fe7541540d2f50"
            ]
        ]
    },
    {
        "id": "37fe7541540d2f50",
        "type": "influxdb in",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "Read",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "VU",
        "x": 650,
        "y": 1360,
        "wires": [
            [
                "439d4b412920dcb7"
            ]
        ]
    },
    {
        "id": "439d4b412920dcb7",
        "type": "function",
        "z": "d0a9e3ee4701cec0",
        "name": "",
        "func": "let temp=[]\nmsg.payload.forEach(function (data,index) {\nlet value={temperature:data[\"_value\"],time:data[\"timestamp\"]}\ntemp.push(value)\n});\nnode.warn(temp)\nmsg.payload=temp\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 1360,
        "wires": [
            [
                "5eb2cada818735d9"
            ]
        ]
    },
    {
        "id": "5eb2cada818735d9",
        "type": "ui_table",
        "z": "d0a9e3ee4701cec0",
        "group": "1d3079f6.1926d6",
        "name": "Influx",
        "order": 0,
        "width": "12",
        "height": "6",
        "columns": [
            {
                "field": "temperature",
                "title": "Temperature",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1150,
        "y": 1360,
        "wires": []
    },
    {
        "id": "599a8c4487b32ac5",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "e810cb3bdaa0302f"
            ]
        ]
    },
    {
        "id": "3b542cebde471a88",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "household",
        "measurement": "Household",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 670,
        "y": 320,
        "wires": []
    },
    {
        "id": "e810cb3bdaa0302f",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format",
        "rules": [
            {
                "t": "set",
                "p": "fields.temperature",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "3b542cebde471a88"
            ]
        ]
    },
    {
        "id": "9f9f1f439e484978",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 140,
        "wires": [
            [
                "22de46660127de68",
                "d53dd4c7804b2bb1"
            ]
        ]
    },
    {
        "id": "22de46660127de68",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Electricity",
        "rules": [
            {
                "t": "set",
                "p": "fields.electricity",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "63b3b0d2e950886d"
            ]
        ]
    },
    {
        "id": "3aaa771e70396686",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Electricity (KW)",
        "info": "",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "e662d2179a32e581",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "GAS (M3)",
        "info": "",
        "x": 840,
        "y": 200,
        "wires": []
    },
    {
        "id": "f41f4c2d75ce7816",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "WATER (M3)",
        "info": "",
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "230219c9d734a6f6",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "household",
        "measurement": "Household",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "b5482a8786071002",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "503a0b036fffef1d"
            ]
        ]
    },
    {
        "id": "503a0b036fffef1d",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Gas",
        "rules": [
            {
                "t": "set",
                "p": "fields.gas",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "230219c9d734a6f6"
            ]
        ]
    },
    {
        "id": "9bbc243bcc2e17c6",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "household",
        "measurement": "Household",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "d1bf63b540d190b8",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "d737414d600914df"
            ]
        ]
    },
    {
        "id": "d737414d600914df",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Water",
        "rules": [
            {
                "t": "set",
                "p": "fields.water",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 260,
        "wires": [
            [
                "9bbc243bcc2e17c6"
            ]
        ]
    },
    {
        "id": "2180d837e004145e",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "transport",
        "measurement": "Transport",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 660,
        "y": 500,
        "wires": []
    },
    {
        "id": "0e8a12690617d32d",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Write Operation TRANSPORT",
        "info": "",
        "x": 180,
        "y": 440,
        "wires": []
    },
    {
        "id": "a3aeddcf414d0bb4",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 500,
        "wires": [
            [
                "e75d3ee021c461e0"
            ]
        ]
    },
    {
        "id": "e75d3ee021c461e0",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Car",
        "rules": [
            {
                "t": "set",
                "p": "fields.car",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "2180d837e004145e"
            ]
        ]
    },
    {
        "id": "2b9384401ab2ccc0",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Car (KM)",
        "info": "",
        "x": 840,
        "y": 500,
        "wires": []
    },
    {
        "id": "1d30b5f5bf93e72c",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Public (KM)",
        "info": "",
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "6c523652c9c5a680",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Air (KM)",
        "info": "",
        "x": 840,
        "y": 620,
        "wires": []
    },
    {
        "id": "a7c77df007e2f9e8",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 560,
        "wires": [
            [
                "c8215b1fce1265ca"
            ]
        ]
    },
    {
        "id": "c8215b1fce1265ca",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Public",
        "rules": [
            {
                "t": "set",
                "p": "fields.public",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 560,
        "wires": [
            [
                "7192b9b806b68df6"
            ]
        ]
    },
    {
        "id": "77dcfdc98e6a34c2",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 620,
        "wires": [
            [
                "0e6290aa113d642d"
            ]
        ]
    },
    {
        "id": "0e6290aa113d642d",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Air",
        "rules": [
            {
                "t": "set",
                "p": "fields.air",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 620,
        "wires": [
            [
                "99a61aca8eb44384"
            ]
        ]
    },
    {
        "id": "7192b9b806b68df6",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "transport",
        "measurement": "Transport",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 660,
        "y": 560,
        "wires": []
    },
    {
        "id": "99a61aca8eb44384",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "transport",
        "measurement": "Transport",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "7c2f10557f0e9281",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "consumption",
        "measurement": "Consumption",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 670,
        "y": 800,
        "wires": []
    },
    {
        "id": "70508248a2158a88",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Write Operation CONSUMPTION",
        "info": "",
        "x": 190,
        "y": 740,
        "wires": []
    },
    {
        "id": "dfe3ec7710fa3a66",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 800,
        "wires": [
            [
                "e0d73ec6c84cb70e"
            ]
        ]
    },
    {
        "id": "e0d73ec6c84cb70e",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Food - coffee",
        "rules": [
            {
                "t": "set",
                "p": "fields.food",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "tags.foodtype",
                "pt": "msg",
                "to": "coffee",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 800,
        "wires": [
            [
                "7c2f10557f0e9281"
            ]
        ]
    },
    {
        "id": "c671f84bf576ae25",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Food (pieces)",
        "info": "",
        "x": 850,
        "y": 800,
        "wires": []
    },
    {
        "id": "fc870ce2af0748d0",
        "type": "comment",
        "z": "d0a9e3ee4701cec0",
        "name": "Waste (KG)",
        "info": "",
        "x": 850,
        "y": 860,
        "wires": []
    },
    {
        "id": "03e793b40b4266d3",
        "type": "inject",
        "z": "d0a9e3ee4701cec0",
        "name": "datapoint point",
        "props": [
            {
                "p": "value",
                "v": "50* $random()",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 860,
        "wires": [
            [
                "efd116b2b77f17d8"
            ]
        ]
    },
    {
        "id": "efd116b2b77f17d8",
        "type": "change",
        "z": "d0a9e3ee4701cec0",
        "name": "Format Waste - Plastic",
        "rules": [
            {
                "t": "set",
                "p": "fields.waste",
                "pt": "msg",
                "to": "value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "tags.type",
                "pt": "msg",
                "to": "plastic",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 860,
        "wires": [
            [
                "111d93b78d60ed68"
            ]
        ]
    },
    {
        "id": "111d93b78d60ed68",
        "type": "influxdb out",
        "z": "d0a9e3ee4701cec0",
        "influxdb": "97a45b603eeb47a0",
        "name": "consumption",
        "measurement": "Consumption",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 670,
        "y": 860,
        "wires": []
    },
    {
        "id": "d53dd4c7804b2bb1",
        "type": "debug",
        "z": "d0a9e3ee4701cec0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "504f2bc967c03176",
        "type": "mqtt in",
        "z": "563356896b95740c",
        "name": "",
        "topic": "/household/electricity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e96ac8f9add6207d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "5ad8c9b8754df77d"
            ]
        ]
    },
    {
        "id": "be937520fecd6c4a",
        "type": "comment",
        "z": "563356896b95740c",
        "name": "Household - publishers",
        "info": "",
        "x": 140,
        "y": 120,
        "wires": []
    },
    {
        "id": "1ca3846f51ca3da4",
        "type": "influxdb out",
        "z": "563356896b95740c",
        "influxdb": "97a45b603eeb47a0",
        "name": "household",
        "measurement": "Household",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 770,
        "y": 180,
        "wires": []
    },
    {
        "id": "5ad8c9b8754df77d",
        "type": "change",
        "z": "563356896b95740c",
        "name": "Format Electricity",
        "rules": [
            {
                "t": "set",
                "p": "fields.electricity",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 180,
        "wires": [
            [
                "1ca3846f51ca3da4"
            ]
        ]
    },
    {
        "id": "8036c83b79e2dfdf",
        "type": "comment",
        "z": "563356896b95740c",
        "name": "GAS (M3)",
        "info": "",
        "x": 940,
        "y": 260,
        "wires": []
    },
    {
        "id": "ad7698b640610c20",
        "type": "comment",
        "z": "563356896b95740c",
        "name": "WATER (M3)",
        "info": "",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "7d9f76a0718d7362",
        "type": "influxdb out",
        "z": "563356896b95740c",
        "influxdb": "97a45b603eeb47a0",
        "name": "household",
        "measurement": "Household",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "33dba07da85b9174",
        "type": "change",
        "z": "563356896b95740c",
        "name": "Format Gas",
        "rules": [
            {
                "t": "set",
                "p": "fields.gas",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "7d9f76a0718d7362"
            ]
        ]
    },
    {
        "id": "1a87cf64a039f6da",
        "type": "influxdb out",
        "z": "563356896b95740c",
        "influxdb": "97a45b603eeb47a0",
        "name": "household",
        "measurement": "Household",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "VU",
        "bucket": "Footprint",
        "x": 770,
        "y": 320,
        "wires": []
    },
    {
        "id": "07356c661f86e680",
        "type": "change",
        "z": "563356896b95740c",
        "name": "Format Water",
        "rules": [
            {
                "t": "set",
                "p": "fields.water",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "1a87cf64a039f6da"
            ]
        ]
    },
    {
        "id": "5ce7a1e78f7e0f0f",
        "type": "mqtt in",
        "z": "563356896b95740c",
        "name": "",
        "topic": "/household/gas",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e96ac8f9add6207d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "33dba07da85b9174"
            ]
        ]
    },
    {
        "id": "f0d02461540c0c66",
        "type": "mqtt in",
        "z": "563356896b95740c",
        "name": "",
        "topic": "/household/water",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e96ac8f9add6207d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "07356c661f86e680"
            ]
        ]
    },
    {
        "id": "8ead25c8cd129138",
        "type": "comment",
        "z": "563356896b95740c",
        "name": "Electricity (kWh)",
        "info": "",
        "x": 960,
        "y": 180,
        "wires": []
    }
]